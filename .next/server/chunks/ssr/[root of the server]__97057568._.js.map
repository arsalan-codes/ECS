{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/ai-instance.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  promptDir: './prompts',\n  plugins: [\n    googleAI({\n      apiKey: process.env.GOOGLE_GENAI_API_KEY,\n    }),\n  ],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,WAAW;IACX,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;YACP,QAAQ,QAAQ,GAAG,CAAC,oBAAoB;QAC1C;KACD;IACD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/sensor.ts"],"sourcesContent":["/**\n * Represents sensor data for temperature, humidity and oxygen.\n */\nexport interface SensorData {\n  /**\n   * The temperature in Celsius.\n   */\n  temperatureCelsius: number;\n  /**\n   * The humidity percentage.\n   */\n  humidity: number;\n  /**\n   * The oxygen level.\n   */\n  oxygen: number;\n}\n\n/**\n * Asynchronously retrieves sensor data.\n *\n * @returns A promise that resolves to a SensorData object containing temperature, humidity, and oxygen levels.\n */\nexport async function getSensorData(): Promise<SensorData> {\n  // TODO: Implement this by calling an API.\n  return {\n    temperatureCelsius: 25,\n    humidity: 60,\n    oxygen: 95,\n  };\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAqBM,eAAe;IACpB,0CAA0C;IAC1C,OAAO;QACL,oBAAoB;QACpB,UAAU;QACV,QAAQ;IACV;AACF","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-sensor-data.ts"],"sourcesContent":["// The use of the `JSON.stringify` and `JSON.parse` functions helps to maintain type safety when interacting with the language model.\n'use server';\n/**\n * @fileOverview Analyzes sensor data and recommends fan speed adjustments for optimal poultry health.\n *\n * - analyzeSensorData - A function that analyzes sensor data and returns fan speed recommendations.\n * - AnalyzeSensorDataInput - The input type for the analyzeSensorData function.\n * - AnalyzeSensorDataOutput - The return type for the analyzeSensorData function.\n */\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\nimport {getSensorData} from '@/services/sensor';\nimport {FanSettings} from '@/services/fan';\n\nconst AnalyzeSensorDataInputSchema = z.object({}).describe('Empty input.');\nexport type AnalyzeSensorDataInput = z.infer<typeof AnalyzeSensorDataInputSchema>;\n\nconst AnalyzeSensorDataOutputSchema = z.object({\n  recommendedFanSpeed: z.number().describe('The recommended fan speed as a percentage.'),\n  explanation: z.string().describe('Explanation of why the fan speed is recommended.'),\n});\nexport type AnalyzeSensorDataOutput = z.infer<typeof AnalyzeSensorDataOutputSchema>;\n\nexport async function analyzeSensorData(input: AnalyzeSensorDataInput): Promise<AnalyzeSensorDataOutput> {\n  return analyzeSensorDataFlow(input);\n}\n\nconst analyzeSensorDataPrompt = ai.definePrompt({\n  name: 'analyzeSensorDataPrompt',\n  input: {\n    schema: z.object({\n      temperatureCelsius: z.number().describe('The temperature in Celsius.'),\n      humidity: z.number().describe('The humidity percentage.'),\n      oxygen: z.number().describe('The oxygen level.'),\n    }),\n  },\n  output: {\n    schema: AnalyzeSensorDataOutputSchema,\n  },\n  prompt: `You are an AI assistant that helps farm managers optimize environmental conditions for poultry health.\n\n  Analyze the sensor data provided below and recommend a fan speed (as a percentage) to ensure optimal conditions for the poultry. Include a brief explanation of your recommendation.\n\n  Sensor Data:\n  - Temperature: {{temperatureCelsius}} Celsius\n  - Humidity: {{humidity}}%\n  - Oxygen: {{oxygen}}%\n\n  Consider ideal ranges for poultry:\n  - Temperature: 18-24 Celsius\n  - Humidity: 50-70%\n  - Oxygen: > 90%\n\n  Respond with the following JSON format:\n  {\n    \"recommendedFanSpeed\": number,\n    \"explanation\": string\n  }`,\n});\n\nconst analyzeSensorDataFlow = ai.defineFlow<\n  typeof AnalyzeSensorDataInputSchema,\n  typeof AnalyzeSensorDataOutputSchema\n>({\n  name: 'analyzeSensorDataFlow',\n  inputSchema: AnalyzeSensorDataInputSchema,\n  outputSchema: AnalyzeSensorDataOutputSchema,\n},\nasync () => {\n  const sensorData = await getSensorData();\n  const {output} = await analyzeSensorDataPrompt({\n    temperatureCelsius: sensorData.temperatureCelsius,\n    humidity: sensorData.humidity,\n    oxygen: sensorData.oxygen,\n  });\n  // The schema guarantees that the output is valid JSON.\n  return output!;\n});\n\n"],"names":[],"mappings":"AAAA,qIAAqI;;;;;;AAErI;;;;;;CAMC,GAED;AACA;AAAA;AACA;;;;;;;AAGA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC;AAG3D,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAGO,eAAe,uCAAe,GAAf,kBAAkB,KAA6B;IACnE,OAAO,sBAAsB;AAC/B;AAEA,MAAM,0BAA0B,2HAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC9C,MAAM;IACN,OAAO;QACL,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YACxC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC9B,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC9B;IACF;IACA,QAAQ;QACN,QAAQ;IACV;IACA,QAAQ,CAAC;;;;;;;;;;;;;;;;;;GAkBR,CAAC;AACJ;AAEA,MAAM,wBAAwB,2HAAA,CAAA,KAAE,CAAC,UAAU,CAGzC;IACA,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA;IACE,MAAM,aAAa,MAAM,CAAA,GAAA,yHAAA,CAAA,gBAAa,AAAD;IACrC,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,wBAAwB;QAC7C,oBAAoB,WAAW,kBAAkB;QACjD,UAAU,WAAW,QAAQ;QAC7B,QAAQ,WAAW,MAAM;IAC3B;IACA,uDAAuD;IACvD,OAAO;AACT;;;IAtDsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/slider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Slider = registerClientReference(\n    function() { throw new Error(\"Attempted to call Slider() from the server but Slider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/slider.tsx <module evaluation>\",\n    \"Slider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA","debugId":null}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/slider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Slider = registerClientReference(\n    function() { throw new Error(\"Attempted to call Slider() from the server but Slider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/slider.tsx\",\n    \"Slider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA","debugId":null}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Switch = registerClientReference(\n    function() { throw new Error(\"Attempted to call Switch() from the server but Switch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/switch.tsx <module evaluation>\",\n    \"Switch\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Switch = registerClientReference(\n    function() { throw new Error(\"Attempted to call Switch() from the server but Switch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/switch.tsx\",\n    \"Switch\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/fan.ts"],"sourcesContent":["/**\n * Represents fan settings, including speed.\n */\nexport interface FanSettings {\n  /**\n   * The fan speed (e.g., percentage or RPM).\n   */\n  speed: number;\n}\n\n/**\n * Asynchronously sets the fan speed.\n *\n * @param settings The desired fan speed settings.\n * @returns A promise that resolves when the fan speed is set.\n */\nexport async function setFanSpeed(settings: FanSettings): Promise<void> {\n  // TODO: Implement this by calling an API.\n  return;\n}\n\n/**\n * Asynchronously retrieves the current fan speed.\n *\n * @returns A promise that resolves to a FanSettings object containing the current speed.\n */\nexport async function getFanSpeed(): Promise<FanSettings> {\n  // TODO: Implement this by calling an API.\n  return {\n    speed: 50,\n  };\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;AAcM,eAAe,YAAY,QAAqB;IACrD,0CAA0C;IAC1C;AACF;AAOO,eAAe;IACpB,0CAA0C;IAC1C,OAAO;QACL,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/lights.ts"],"sourcesContent":["/**\n * Represents light settings, including on/off status.\n */\nexport interface LightSettings {\n  /**\n   * Whether the light is on or off.\n   */\n  isOn: boolean;\n}\n\n/**\n * Asynchronously sets the light status (on or off).\n *\n * @param settings The desired light settings.\n * @returns A promise that resolves when the light status is set.\n */\nexport async function setLightStatus(settings: LightSettings): Promise<void> {\n  // TODO: Implement this by calling an API.\n  return;\n}\n\n/**\n * Asynchronously retrieves the current light status.\n *\n * @returns A promise that resolves to a LightSettings object containing the current on/off status.\n */\nexport async function getLightStatus(): Promise<LightSettings> {\n  // TODO: Implement this by calling an API.\n  return {\n    isOn: true,\n  };\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;AAcM,eAAe,eAAe,QAAuB;IAC1D,0CAA0C;IAC1C;AACF;AAOO,eAAe;IACpB,0CAA0C;IAC1C,OAAO;QACL,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA","debugId":null}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const reducer = registerClientReference(\n    function() { throw new Error(\"Attempted to call reducer() from the server but reducer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.ts <module evaluation>\",\n    \"reducer\",\n);\nexport const toast = registerClientReference(\n    function() { throw new Error(\"Attempted to call toast() from the server but toast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.ts <module evaluation>\",\n    \"toast\",\n);\nexport const useToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call useToast() from the server but useToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.ts <module evaluation>\",\n    \"useToast\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wDACA;AAEG,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,wDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wDACA","debugId":null}},
    {"offset": {"line": 715, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const reducer = registerClientReference(\n    function() { throw new Error(\"Attempted to call reducer() from the server but reducer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.ts\",\n    \"reducer\",\n);\nexport const toast = registerClientReference(\n    function() { throw new Error(\"Attempted to call toast() from the server but toast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.ts\",\n    \"toast\",\n);\nexport const useToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call useToast() from the server but useToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/hooks/use-toast.ts\",\n    \"useToast\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oCACA;AAEG,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,oCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oCACA","debugId":null}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ChartContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartContainer() from the server but ChartContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartContainer\",\n);\nexport const ChartLegend = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegend() from the server but ChartLegend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartLegend\",\n);\nexport const ChartLegendContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegendContent() from the server but ChartLegendContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartLegendContent\",\n);\nexport const ChartStyle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartStyle() from the server but ChartStyle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartStyle\",\n);\nexport const ChartTooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltip() from the server but ChartTooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartTooltip\",\n);\nexport const ChartTooltipContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltipContent() from the server but ChartTooltipContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx <module evaluation>\",\n    \"ChartTooltipContent\",\n);\n"],"names":[],"mappings":";;;;;;;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,6DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6DACA","debugId":null}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ChartContainer = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartContainer() from the server but ChartContainer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartContainer\",\n);\nexport const ChartLegend = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegend() from the server but ChartLegend is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartLegend\",\n);\nexport const ChartLegendContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartLegendContent() from the server but ChartLegendContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartLegendContent\",\n);\nexport const ChartStyle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartStyle() from the server but ChartStyle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartStyle\",\n);\nexport const ChartTooltip = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltip() from the server but ChartTooltip is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartTooltip\",\n);\nexport const ChartTooltipContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call ChartTooltipContent() from the server but ChartTooltipContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/chart.tsx\",\n    \"ChartTooltipContent\",\n);\n"],"names":[],"mappings":";;;;;;;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yCACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,yCACA","debugId":null}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { getSensorData } from '@/services/sensor';\nimport { Icons } from '@/components/icons';\nimport { useEffect, useState } from 'react';\nimport { Slider } from '@/components/ui/slider';\nimport { Switch } from '@/components/ui/switch';\nimport { getFanSpeed, setFanSpeed } from '@/services/fan';\nimport { getLightStatus, setLightStatus } from '@/services/lights';\nimport { analyzeSensorData } from '@/ai/flows/analyze-sensor-data';\nimport { Badge } from '@/components/ui/badge';\nimport { Toaster } from '@/components/ui/toaster';\nimport { useToast } from '@/hooks/use-toast';\nimport {\n  Chart,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\n\nconst chartConfig = {\n  temperature: {\n    label: \"Temperature (°C)\",\n    color: \"hsl(var(--chart-1))\",\n  },\n  humidity: {\n    label: \"Humidity (%)\",\n    color: \"hsl(var(--chart-2))\",\n  },\n  oxygen: {\n    label: \"Oxygen (%)\",\n    color: \"hsl(var(--chart-3))\",\n  },\n};\n\nexport default function Home() {\n  const [temperature, setTemperature] = useState<number>(0);\n  const [humidity, setHumidity] = useState<number>(0);\n  const [oxygen, setOxygen] = useState<number>(0);\n  const [fanSpeed, setFanSpeedState] = useState<number>(0);\n  const [lightStatus, setLightStatusState] = useState<boolean>(false);\n  const [aiRecommendation, setAiRecommendation] = useState<{ recommendedFanSpeed: number; explanation: string; } | null>(null);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const sensorData = await getSensorData();\n      setTemperature(sensorData.temperatureCelsius);\n      setHumidity(sensorData.humidity);\n      setOxygen(sensorData.oxygen);\n\n      const fanSettings = await getFanSpeed();\n      setFanSpeedState(fanSettings.speed);\n\n      const lightSettings = await getLightStatus();\n      setLightStatusState(lightSettings.isOn);\n\n      const aiOutput = await analyzeSensorData({});\n      setAiRecommendation(aiOutput);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleFanSpeedChange = async (value: number[]) => {\n    const newSpeed = value[0];\n    setFanSpeedState(newSpeed);\n    await setFanSpeed({ speed: newSpeed });\n    toast({\n      title: \"Fan speed updated.\",\n      description: `Fan speed set to ${newSpeed}%.`,\n    });\n  };\n\n  const handleLightStatusChange = async (checked: boolean) => {\n    setLightStatusState(checked);\n    await setLightStatus({ isOn: checked });\n    toast({\n      title: \"Light status updated.\",\n      description: `Lights ${checked ? 'turned on' : 'turned off'}.`,\n    });\n  };\n\n  const historicalData = [\n    { time: '00:00', temperature: 22, humidity: 60, oxygen: 95 },\n    { time: '03:00', temperature: 23, humidity: 62, oxygen: 94 },\n    { time: '06:00', temperature: 24, humidity: 64, oxygen: 93 },\n    { time: '09:00', temperature: 23, humidity: 63, oxygen: 94 },\n    { time: '12:00', temperature: 25, humidity: 65, oxygen: 92 },\n    { time: '15:00', temperature: 26, humidity: 66, oxygen: 91 },\n    { time: '18:00', temperature: 24, humidity: 64, oxygen: 93 },\n    { time: '21:00', temperature: 23, humidity: 63, oxygen: 94 },\n    { time: '24:00', temperature: 22, humidity: 61, oxygen: 95 },\n  ];\n\n  return (\n    <div className=\"flex flex-col p-4 gap-4\">\n      <Toaster />\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Temperature</CardTitle>\n            <CardDescription>Current temperature in Celsius</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center gap-2\">\n              <Icons.thermometer className=\"h-4 w-4\" />\n              {temperature}°C\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <CardTitle>Humidity</CardTitle>\n            <CardDescription>Current humidity percentage</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center gap-2\">\n              <Icons.wind className=\"h-4 w-4\" />\n              {humidity}%\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <CardTitle>Oxygen</CardTitle>\n            <CardDescription>Current oxygen level</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center gap-2\">\n              <Icons.wind className=\"h-4 w-4\" />\n              {oxygen}%\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Fan Speed Control</CardTitle>\n            <CardDescription>Adjust the fan speed manually</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex flex-col gap-2\">\n              <Slider\n                defaultValue={[fanSpeed]}\n                max={100}\n                step={1}\n                onValueChange={handleFanSpeedChange}\n              />\n              <p>Current speed: {fanSpeed}%</p>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Lighting Control</CardTitle>\n            <CardDescription>Turn lights on or off remotely</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center justify-between\">\n              <span>Lights are: {lightStatus ? 'On' : 'Off'}</span>\n              <Switch checked={lightStatus} onCheckedChange={handleLightStatusChange} />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>AI-Powered Optimization</CardTitle>\n          <CardDescription>AI recommendation for optimal fan speed</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {aiRecommendation ? (\n            <div className=\"flex flex-col gap-2\">\n              <Badge variant=\"secondary\">Recommended Fan Speed: {aiRecommendation.recommendedFanSpeed}%</Badge>\n              <p>{aiRecommendation.explanation}</p>\n            </div>\n          ) : (\n            <p>Loading AI recommendation...</p>\n          )}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Historical Data Visualization</CardTitle>\n          <CardDescription>Visual representation of sensor data over time</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <ChartContainer config={chartConfig} className=\"h-[300px]\">\n            <AreaChart data={historicalData} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip content={<ChartTooltipContent />} />\n              <Area type=\"monotone\" dataKey=\"temperature\" stroke={chartConfig.temperature.color} fillOpacity={0.5} fill={chartConfig.temperature.color} />\n              <Area type=\"monotone\" dataKey=\"humidity\" stroke={chartConfig.humidity.color} fillOpacity={0.5} fill={chartConfig.humidity.color} />\n              <Area type=\"monotone\" dataKey=\"oxygen\" stroke={chartConfig.oxygen.color} fillOpacity={0.5} fill={chartConfig.oxygen.color} />\n            </AreaChart>\n          </ChartContainer>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}